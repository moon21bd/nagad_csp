{
    "compilerOptions": {
        "target": "esnext",
        "module": "esnext",
        //	Enable all strict type checking options.
        // Enabling --strict is equivalent to enabling --noImplicitAny, --noImplicitThis, --alwaysStrict, --strictNullChecks, --strictFunctionTypes, and --strictPropertyInitialization.
        "strict": true,
        // Allows compiler to compile JS, JSX files
        "allowJs": true,
        // Allows errors in JS files, usually used with allowJS
        "checkJs": false,
        // Allow the use of jsx
        "jsx": "preserve",
        "declaration": true,
        // Remove Annotation
        "removeComments": true,
        // Can't ignore any
        "noImplicitAny": true,
        // Turn off this type annotation hint
        "noImplicitThis": true,
        // null/undefined cannot be a subtype of another type:
        //let a: number = null; // This will report an error.
        "strictNullChecks": true,
        //Generate mapping code for enumeration
        "preserveConstEnums": true,
        // Root directory
        // Output directory
        "outDir": "./ts-out-dir",
        //Whether to output src2.js.map file
        "sourceMap": true,
        //Variable defined but not used
        "noUnusedLocals": false,
        //Is it allowed to parse json files as modules?
        "resolveJsonModule": true,
        //Same as noUnusedLocals, for func
        "noUnusedParameters": false,
        // Module parsing strategy, ts uses node's parsing strategy by default, that is, import in a relative way
        "moduleResolution": "node",
        //Allow export=export, import from
        "esModuleInterop": true,
        //Ignore type checking for all declaration files ( *.d.ts ).
        "skipLibCheck": true,
        "baseUrl": ".",
        "paths": {
            "@/*": [
                "resources/js/*"
            ]
        },
        // Specify the default directory to read
        //"typeRoots": ["./node_modules/@types/", "./types"],
        "lib": [
            "ES2018",
            "DOM"
        ]
    },
    //"files": [],
    //The include folder will be read by ts
    "include": [
        "resources/js"
    ]
}
